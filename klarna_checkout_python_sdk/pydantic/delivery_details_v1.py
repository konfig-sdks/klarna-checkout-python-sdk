# coding: utf-8

"""
    Klarna Checkout API V3

    The checkout API is used to create a checkout with Klarna and update the checkout order during the purchase. As soon as the purchase is completed the order should be read and handled using the [`Order Management API`](https://docs.klarna.com/api/ordermanagement).\\n\\nRead more on [Klarna checkout](https://docs.klarna.com/klarna-checkout/).

    The version of the OpenAPI document: 1.0.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel

from klarna_checkout_python_sdk.pydantic.pickup_location_v1 import PickupLocationV1
from klarna_checkout_python_sdk.pydantic.product_v1 import ProductV1
from klarna_checkout_python_sdk.pydantic.timeslot_v1 import TimeslotV1

class DeliveryDetailsV1(BaseModel):
    # Carrier product name
    carrier: typing.Optional[str] = Field(None, alias='carrier')

    product: typing.Optional[ProductV1] = Field(None, alias='product')

    timeslot: typing.Optional[TimeslotV1] = Field(None, alias='timeslot')

    pickup_location: typing.Optional[PickupLocationV1] = Field(None, alias='pickup_location')
    class Config:
        arbitrary_types_allowed = True
