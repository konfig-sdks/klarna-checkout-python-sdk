# coding: utf-8

"""
    Klarna Checkout API V3

    The checkout API is used to create a checkout with Klarna and update the checkout order during the purchase. As soon as the purchase is completed the order should be read and handled using the [`Order Management API`](https://docs.klarna.com/api/ordermanagement).\\n\\nRead more on [Klarna checkout](https://docs.klarna.com/klarna-checkout/).

    The version of the OpenAPI document: 1.0.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel


class Customer(BaseModel):
    # The default supported value is 'person'. If B2B is enabled for the merchant, the value may be \"organization\".
    type: typing.Optional[str] = Field(None, alias='type')

    # Customer’s gender - ‘male’ or ‘female’.
    gender: typing.Optional[str] = Field(None, alias='gender')

    # Customer’s date of birth. The format is ‘yyyy-mm-dd’. ISO 8601 date.
    date_of_birth: typing.Optional[str] = Field(None, alias='date_of_birth')

    # \"The organization's official registration id (organization number).  Note: Applicable only for B2B orders.\"
    organization_registration_id: typing.Optional[str] = Field(None, alias='organization_registration_id')

    # Organization VAT ID. Only applies for b2b orders.
    vat_id: typing.Optional[str] = Field(None, alias='vat_id')
    class Config:
        arbitrary_types_allowed = True
