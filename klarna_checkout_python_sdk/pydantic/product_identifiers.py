# coding: utf-8

"""
    Klarna Checkout API V3

    The checkout API is used to create a checkout with Klarna and update the checkout order during the purchase. As soon as the purchase is completed the order should be read and handled using the [`Order Management API`](https://docs.klarna.com/api/ordermanagement).\\n\\nRead more on [Klarna checkout](https://docs.klarna.com/klarna-checkout/).

    The version of the OpenAPI document: 1.0.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel


class ProductIdentifiers(BaseModel):
    # The product's brand name as generally recognized by consumers. If no brand is available for a product, do not supply any value.
    brand: typing.Optional[str] = Field(None, alias='brand')

    # Color to be shown to the end customer (max 64 characters).
    color: typing.Optional[str] = Field(None, alias='color')

    # The product's category path as used in the merchant's webshop. Include the full and most detailed category and separate the segments with ' > '. (max 750 characters)  Example: \"Electronics Store > Computers & Tablets > Desktops\"
    category_path: typing.Optional[str] = Field(None, alias='category_path')

    # The product's Global Trade Item Number (GTIN). Common types of GTIN are EAN, ISBN or UPC. Exclude dashes and spaces, where possible
    global_trade_item_number: typing.Optional[str] = Field(None, alias='global_trade_item_number')

    # The product's Manufacturer Part Number (MPN), which - together with the brand - uniquely identifies a product. Only submit MPNs assigned by a manufacturer and use the most specific MPN possible
    manufacturer_part_number: typing.Optional[str] = Field(None, alias='manufacturer_part_number')

    # Size to be shown to the end customer (max 64 characters).
    size: typing.Optional[str] = Field(None, alias='size')
    class Config:
        arbitrary_types_allowed = True
